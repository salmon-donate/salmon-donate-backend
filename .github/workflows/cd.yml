name: CD

on:
  release:
    types: [published]

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/salmon-donate-backend

jobs:
  # JVM Build
  jvm-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Run JVM Build Script
        run: ./scripts/build-jvm.sh

      - name: Build and Push JVM Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./src/main/docker/Dockerfile.jvm
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:jvm-latest
            ${{ env.IMAGE_NAME }}:jvm-${{ github.ref_name }}

  # Native Build
  graalvm-build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        architecture: [ amd64, arm64 ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Run GraalVM Build Script
        run: ./scripts/build-native.sh

      - name: Build and Push GraalVM Docker Image by Digest
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./src/main/docker/Dockerfile.native-micro
          platforms: linux/${{ matrix.architecture }}
          tags: |
            ${{ env.IMAGE_NAME }}:graalvm-latest-${{ matrix.architecture }}
            ${{ env.IMAGE_NAME }}:graalvm-${{ github.ref_name }}-${{ matrix.architecture }}
          push: true

  graalvm-build-create-manifests:
    runs-on: ubuntu-latest
    needs: [ graalvm-build ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create Versioned Manifest and Push
        run: |
          docker manifest create \
            ${{ env.IMAGE_NAME }}:graalvm-${{ github.ref_name }} \
            --amend ${{ env.IMAGE_NAME }}:graalvm-${{ github.ref_name }}-amd64 \
            --amend ${{ env.IMAGE_NAME }}:graalvm-${{ github.ref_name }}-arm64
          docker manifest push ${{ env.IMAGE_NAME }}:graalvm-${{ github.ref_name }}

      - name: Create Latest Manifest and Push
        run: |
          docker manifest create \
            ${{ env.IMAGE_NAME }}:graalvm-latest \
            --amend ${{ env.IMAGE_NAME }}:graalvm-latest-amd64 \
            --amend ${{ env.IMAGE_NAME }}:graalvm-latest-arm64
          docker manifest push ${{ env.IMAGE_NAME }}:latest